import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import com.misael.Telefono;

import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.TitledBorder;
import java.awt.Dimension;
import java.awt.Insets;
import java.util.ArrayList;
import java.util.Objects;

public class TelefonoGUI extends JFrame {
    private JTextField tfNumSerie;
    private JTextField tfNumSerieOut;
    private JTextField tfMarcaOut;
    private JTextField tfPantallaOut;
    private JTextField tfMemoriaOut;
    private JButton btnGuardar;
    private JButton btnMostrar;
    private JLabel labelNumSerie;
    private JLabel labelMarca;
    private JLabel labelPantalla;
    private JLabel labelNumSerieOut;
    private JLabel labelMarcaOut;
    private JLabel labelPantallaOut;
    private JLabel labelMemoria;
    private JLabel labelMemoriaOut;
    private JPanel panelPrincipal;

    private final String[] listaPantallas = {"14 inch", "15 inch", "17 inch"};
    private final String[] listaMemorias = {"4GB", "8GB", "16GB", "32GB", "64GB", "128GB"};
    private final String[] listaMarcas = {"Samsung", "Xiaomi", "Apple", "Huawei"};

    private JComboBox<String> cbMemoria;
    private JComboBox<String> cbPantalla;
    private JButton btnSiguiente;
    private JButton btnAnterior;
    private JPanel panelBotonesMostrar;
    private JPanel panelBotonGuardar;
    private JComboBox<String> cbMarca;

    int currentTelefono = 0;

    ArrayList<Telefono> listaTelefonos = new ArrayList<>();

    public TelefonoGUI(String title) {
        super(title);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setContentPane(panelPrincipal);
        this.pack();
        this.setResizable(false);
        configurarComponentes();
        initActionListeners();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelPrincipal = new JPanel();
        panelPrincipal.setLayout(new GridLayoutManager(10, 2, new Insets(0, 0, 0, 0), -1, -1));
        panelPrincipal.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        labelNumSerie = new JLabel();
        labelNumSerie.setText("Número de serie");
        panelPrincipal.add(labelNumSerie, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        tfNumSerie = new JTextField();
        panelPrincipal.add(tfNumSerie, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        labelMarca = new JLabel();
        labelMarca.setText("Marca");
        panelPrincipal.add(labelMarca, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        labelPantalla = new JLabel();
        labelPantalla.setText("Pantalla");
        panelPrincipal.add(labelPantalla, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        labelNumSerieOut = new JLabel();
        labelNumSerieOut.setText("Número de serie");
        panelPrincipal.add(labelNumSerieOut, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        labelMarcaOut = new JLabel();
        labelMarcaOut.setText("Marca");
        panelPrincipal.add(labelMarcaOut, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        labelPantallaOut = new JLabel();
        labelPantallaOut.setText("Pantalla");
        panelPrincipal.add(labelPantallaOut, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        tfNumSerieOut = new JTextField();
        tfNumSerieOut.setEditable(false);
        panelPrincipal.add(tfNumSerieOut, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        tfMarcaOut = new JTextField();
        tfMarcaOut.setEditable(false);
        panelPrincipal.add(tfMarcaOut, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        tfPantallaOut = new JTextField();
        tfPantallaOut.setEditable(false);
        panelPrincipal.add(tfPantallaOut, new GridConstraints(8, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        labelMemoria = new JLabel();
        labelMemoria.setText("Memoria");
        panelPrincipal.add(labelMemoria, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        labelMemoriaOut = new JLabel();
        labelMemoriaOut.setText("Memoria");
        panelPrincipal.add(labelMemoriaOut, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        tfMemoriaOut = new JTextField();
        tfMemoriaOut.setEditable(false);
        panelPrincipal.add(tfMemoriaOut, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        cbMemoria = new JComboBox();
        panelPrincipal.add(cbMemoria, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cbPantalla = new JComboBox();
        panelPrincipal.add(cbPantalla, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        panelBotonesMostrar = new JPanel();
        panelBotonesMostrar.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        panelPrincipal.add(panelBotonesMostrar, new GridConstraints(9, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        btnMostrar = new JButton();
        btnMostrar.setText("Mostrar");
        panelBotonesMostrar.add(btnMostrar, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnSiguiente = new JButton();
        btnSiguiente.setText(">>");
        panelBotonesMostrar.add(btnSiguiente, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnAnterior = new JButton();
        btnAnterior.setText("<<");
        panelBotonesMostrar.add(btnAnterior, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        panelBotonGuardar = new JPanel();
        panelBotonGuardar.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        panelPrincipal.add(panelBotonGuardar, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        btnGuardar = new JButton();
        btnGuardar.setText("Guardar");
        panelBotonGuardar.add(btnGuardar, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panelBotonGuardar.add(spacer1, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        panelBotonGuardar.add(spacer2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        cbMarca = new JComboBox();
        panelPrincipal.add(cbMarca, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelPrincipal;
    }

    public void configurarComponentes() {
        cbMemoria.setModel(new DefaultComboBoxModel<>(listaMemorias));
        cbPantalla.setModel(new DefaultComboBoxModel<>(listaPantallas));
        cbMarca.setModel(new DefaultComboBoxModel<>(listaMarcas));
    }

    public void initActionListeners() {
        btnGuardar.addActionListener(e -> {
            String numSerie = tfNumSerie.getText();
            String marca = Objects.requireNonNull(cbMarca.getSelectedItem()).toString();
            String memoria = Objects.requireNonNull(cbMemoria.getSelectedItem()).toString();
            String pantalla = Objects.requireNonNull(cbPantalla.getSelectedItem()).toString();

            listaTelefonos.add(new Telefono(numSerie, marca, memoria, pantalla));

            JOptionPane.showMessageDialog(null, "Teléfono registrado correctamente.");

            clearTextFields();

        });

        btnMostrar.addActionListener(e -> {
            printCurrentAlumno();
        });


        btnSiguiente.addActionListener(e1 -> {
            currentTelefono++;
            printCurrentAlumno();
        });

        btnAnterior.addActionListener(e12 -> {
            currentTelefono--;
            printCurrentAlumno();
        });

    }

    private void clearTextFields() {
        tfNumSerie.setText("");
        cbMarca.setSelectedIndex(0);
        cbMemoria.setSelectedIndex(0);
        cbPantalla.setSelectedIndex(0);
    }

    private void printCurrentAlumno() {
        if (currentTelefono >= 0 && currentTelefono < listaTelefonos.size()) {
            tfNumSerieOut.setText(listaTelefonos.get(currentTelefono).getNumeroSerie());
            tfMarcaOut.setText(listaTelefonos.get(currentTelefono).getMarca());
            tfMemoriaOut.setText(listaTelefonos.get(currentTelefono).getMemoria());
            tfPantallaOut.setText(listaTelefonos.get(currentTelefono).getPantalla());
        }
    }
}
